--version:  Show version and exit.
--optimize: Enable bytecode optimizer.
--optimize-runs n (=200): Estimated number of contract runs 
                          for optimizer tuning.
--add-std: Add standard contracts.
--libraries libs:    Direct string or file containing library addresses. 
-o [ --output-dir ] path: If given, creates one file per component and 
 contract/file at the specified directory.
--combined-json abi,asm,ast,bin,bin-runtime,clone-bin,devdoc,
      interface,opcodes,userdoc: Output a single json document 
      containing the specified information.
--gas:   Print an estimate of the maximal gas usage for each function.
--assemble: Switch to assembly mode, ignoring all options and 
            assumes input is assembly.
--link:  Switch to linker mode, ignoring all options apart from 
        --libraries and modify binaries in place.
--ast:  AST of all source files.
--ast-json:  AST of all source files in JSON format.
--asm:  EVM assembly of the contracts.
--asm-json:  EVM assembly of the contracts in JSON format.
--opcodes:   Opcodes of the contracts.
--bin:  Binary of the contracts in hex.
--bin-runtime:    Binary of the runtime part of the contracts in hex.
--clone-bin: Binary of the clone contracts in hex.
--abi:  ABI specification of the contracts.
--interface: Solidity interface of the contracts.
--hashes:    Function signature hashes of the contracts.
--userdoc:   Natspec user documentation of all contracts.
--devdoc:    Natspec developer documentation of all contracts.
--formal:    Translated source suitable for formal analysis.